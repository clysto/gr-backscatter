/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(burst_frame_scaler.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(6b1e64b12607c457b9dff12db25f56a4)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/backscatter/burst_frame_scaler.h>
// pydoc.h is automatically generated in the build directory
#include <burst_frame_scaler_pydoc.h>

void bind_burst_frame_scaler(py::module& m)
{

    using burst_frame_scaler = gr::backscatter::burst_frame_scaler;


    py::class_<burst_frame_scaler,
               gr::block,
               gr::basic_block,
               std::shared_ptr<burst_frame_scaler>>(
        m, "burst_frame_scaler", D(burst_frame_scaler))

        .def(py::init(&burst_frame_scaler::make), D(burst_frame_scaler, make))


        ;
}
