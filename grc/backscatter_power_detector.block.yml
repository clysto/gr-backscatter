id: backscatter_power_detector
label: Power Detector
category: "[Backscatter]"
flags: [ python, cpp ]

templates:
  imports: from gnuradio import backscatter
  make: backscatter.power_detector(${window_size})

cpp_templates:
  includes: ['#include <gnuradio/backscatter/power_detector.h>']
  declarations: 'backscatter::power_detector::sptr ${id};'
  make: 'this->${id} = backscatter::power_detector::make(${window_size});'

parameters:
  - id: window_size
    label: Window Size
    dtype: int
    default: "500"

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
  - label: in
    domain: stream
    dtype: float

outputs:
  - label: snr
    domain: stream
    dtype: float
  - label: power
    domain: stream
    dtype: float
    optional: true

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
